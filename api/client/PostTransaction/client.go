package main

import (
	"context"
	"fmt"

	"github.com/sirupsen/logrus"
	log "github.com/sirupsen/logrus"
	"github.com/spf13/viper"
	rpc_model "github.com/zoobc/zoobc-core/common/model"
	rpc_service "github.com/zoobc/zoobc-core/common/service"
	"github.com/zoobc/zoobc-core/common/util"
	"google.golang.org/grpc"
)

func main() {
	var apiRPCPort int
	if err := util.LoadConfig("../../../resource", "config", "toml"); err != nil {
		logrus.Fatal(err)
	} else {
		apiRPCPort = viper.GetInt("apiRPCPort")
		if apiRPCPort == 0 {
			apiRPCPort = 8080
		}
	}

	conn, err := grpc.Dial(fmt.Sprintf(":%d", apiRPCPort), grpc.WithInsecure())
	if err != nil {
		log.Fatalf("did not connect: %s", err)
	}
	defer conn.Close()

	c := rpc_service.NewTransactionServiceClient(conn)

	response, err := c.PostTransaction(context.Background(), &rpc_model.PostTransactionRequest{
		// Remove node registration
		TransactionBytes: []byte{2, 2, 0, 0, 1, 234, 112, 141, 93, 0, 0, 0, 0, 44, 0, 0, 0, 66, 67,
			90, 69, 71, 79, 98, 51, 87, 78, 120, 51, 102, 68, 79, 86, 102, 57, 90, 83, 52, 69, 106,
			118, 79, 73, 118, 95, 85, 101, 87, 52, 84, 86, 66, 81, 74, 95, 54, 116, 72, 75, 108, 69,
			44, 0, 0, 0, 66, 67, 90, 69, 71, 79, 98, 51, 87, 78, 120, 51, 102, 68, 79, 86, 102, 57,
			90, 83, 52, 69, 106, 118, 79, 73, 118, 95, 85, 101, 87, 52, 84, 86, 66, 81, 74, 95, 54,
			116, 72, 75, 108, 69, 1, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 153, 58, 50, 200, 7, 61, 108,
			229, 204, 48, 199, 145, 21, 99, 125, 75, 49, 45, 118, 97, 219, 80, 242, 244, 100, 134,
			144, 246, 37, 144, 213, 135, 0, 0, 0, 0, 198, 233, 202, 223, 179, 244, 150, 151, 79,
			110, 147, 215, 52, 110, 180, 63, 52, 9, 206, 82, 172, 121, 167, 64, 9, 209, 95, 23, 68,
			5, 94, 110, 64, 188, 165, 254, 244, 196, 203, 245, 29, 248, 12, 97, 225, 180, 66, 130,
			187, 42, 93, 161, 96, 224, 21, 157, 27, 131, 44, 248, 142, 131, 24, 13},
		// TransactionBytes: []byte{
		// 	1, 0, 0, 0, 1, 210, 225, 121, 93, 0, 0, 0, 0, 44, 0, 0, 0, 110, 75, 95, 111, 117, 120, 100, 68,
		// 	68, 119, 117, 74, 105, 111, 103, 105, 68, 65, 105, 95, 122, 115, 49, 76, 113, 101, 78, 55, 102,
		// 	53, 90, 115, 88, 98, 70, 116, 88, 71, 113, 71, 99, 48, 80, 100, 44, 0, 0, 0, 118, 66, 75, 98,
		// 	114, 82, 53, 89, 57, 83, 71, 68, 74, 51, 50, 49, 76, 119, 53, 53, 50, 119, 53, 106, 85, 50, 76,
		// 	109, 79, 81, 67, 68, 120, 81, 114, 114, 118, 74, 48, 67, 85, 107, 101, 70, 160, 134, 1, 0, 0,
		// 	0, 0, 0, 8, 0, 0, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 109, 6, 82, 80, 77, 171, 32, 88,
		// 	211, 199, 11, 114, 75, 229, 243, 98, 167, 159, 225, 11, 40, 125, 221, 252, 44, 131, 136, 13,
		// 	104, 109, 228, 40, 27, 177, 175, 128, 223, 154, 19, 71, 18, 134, 177, 77, 96, 157, 187, 91,
		// 	152, 160, 78, 140, 96, 81, 116, 38, 164, 105, 149, 50, 138, 236, 209, 11},
		// add node
		// TransactionBytes: []byte{
		//	2, 0, 0, 0, 1, 77, 2, 85, 93, 0, 0, 0, 0, 44, 0, 0, 0, 66, 67, 90, 110, 83, 102, 113, 112, 80, 53, 116, 113, 70, 81, 108,
		//	77, 84, 89, 107, 68, 101, 66, 86, 70, 87, 110, 98, 121, 86, 75, 55, 118, 76, 114, 53, 79, 82, 70, 112, 84, 106, 103, 116,
		//	78, 44, 0, 0, 0, 66, 67, 90, 75, 76, 118, 103, 85, 89, 90, 49, 75, 75, 120, 45, 106, 116, 70, 57, 75, 111, 74, 115, 107,
		//	106, 86, 80, 118, 66, 57, 106, 112, 73, 106, 102, 122, 122, 73, 54, 122, 68, 87, 48, 74, 1, 0, 0, 0, 0, 0, 0, 0, 179, 0,
		//	0, 0, 0, 14, 6, 218, 170, 54, 60, 50, 2, 66, 130, 119, 226, 235, 126, 203, 5, 12, 152, 194, 170, 146, 43, 63, 224, 101,
		//	127, 241, 62, 152, 187, 255, 44, 0, 0, 0, 66, 67, 90, 110, 83, 102, 113, 112, 80, 53, 116, 113, 70, 81, 108, 77, 84, 89,
		//	107, 68, 101, 66, 86, 70, 87, 110, 98, 121, 86, 75, 55, 118, 76, 114, 53, 79, 82, 70, 112, 84, 106, 103, 116, 78, 9, 0, 0,
		//	0, 49, 50, 55, 46, 48, 46, 48, 46, 49, 160, 134, 1, 0, 0, 0, 0, 0, 72, 101, 108, 108, 111, 66, 108, 111, 99, 107, 0, 0, 0, 0,
		//	199, 197, 72, 124, 13, 17, 101, 202, 66, 255, 200, 80, 230, 26, 232, 97, 114, 251, 243, 2, 160, 39, 241, 127, 134, 183, 154,
		//	155, 151, 223, 41, 5, 43, 100, 106, 180, 105, 192, 249, 103, 238, 62, 74, 180, 114, 42, 210, 236, 201, 241, 198, 237, 233, 66, 198,
		//	203, 18, 201, 201, 61, 39, 167, 91, 10, 229, 148, 34, 207, 159, 48, 187, 20, 133, 227, 205, 56, 234, 23, 245, 89, 41, 246, 210, 194,
		//	132, 107, 152, 95, 198, 96, 238, 88, 8, 76, 24, 42, 139, 71, 249, 178, 252, 59, 30, 57, 74, 146, 163, 211, 36, 110, 221, 219, 218,
		//	57, 63, 79, 55, 216, 214, 139, 85, 125, 62, 129, 158, 16, 108, 3,
		// },

		// setup Dataset
		// TransactionBytes: []byte{
		// 	3, 0, 0, 0, 1, 92, 108, 83, 93, 0, 0, 0, 0, 44, 0, 0, 0, 66, 67, 90, 110, 83, 102, 113, 112, 80, 53, 116, 113, 70, 81, 108,
		// 	77, 84, 89, 107, 68, 101, 66, 86, 70, 87, 110, 98, 121, 86, 75, 55, 118, 76, 114, 53, 79, 82, 70, 112, 84, 106, 103, 116,
		// 	78, 44, 0, 0, 0, 66, 67, 90, 75, 76, 118, 103, 85, 89, 90, 49, 75, 75, 120, 45, 106, 116, 70, 57, 75, 111, 74, 115, 107, 106,
		// 	86, 80, 118, 66, 57, 106, 112, 73, 106, 102, 122, 122, 73, 54, 122, 68, 87, 48, 74, 1, 0, 0, 0, 0, 0, 0, 0, 131, 0, 0, 0,
		// 	44, 0, 0, 0, 66, 67, 90, 110, 83, 102, 113, 112, 80, 53, 116, 113, 70, 81, 108, 77, 84, 89, 107, 68, 101, 66, 86, 70, 87,
		// 	110, 98, 121, 86, 75, 55, 118, 76, 114, 53, 79, 82, 70, 112, 84, 106, 103, 116, 78, 44, 0, 0, 0, 66, 67, 90, 75, 76, 118, 103,
		// 	85, 89, 90, 49, 75, 75, 120, 45, 106, 116, 70, 57, 75, 111, 74, 115, 107, 106, 86, 80, 118, 66, 57, 106, 112, 73, 106, 102,
		// 	122, 122, 73, 54, 122, 68, 87, 48, 74, 5, 0, 0, 0, 65, 100, 109, 105, 110, 14, 0, 0, 0, 121, 111, 117, 114, 32, 97, 114, 101,
		// 	32, 97, 100, 109, 105, 110, 0, 141, 39, 0, 0, 0, 0, 0, 49, 195, 165, 218, 129, 183, 199, 241, 41, 12, 132, 139, 76, 252, 226,
		// 	91, 5, 96, 72, 140, 247, 72, 100, 67, 148, 188, 226, 179, 71, 94, 87, 191, 147, 220, 243, 199, 102, 104, 155, 203, 82, 23,
		// 	255, 170, 37, 39, 65, 195, 54, 30, 184, 46, 230, 222, 62, 138, 79, 69, 22, 191, 34, 9, 81, 4,
		// },
	})

	if err != nil {
		log.Fatalf("error calling rpc_service.PostTransaction: %s", err)
	}

	log.Printf("response from remote rpc_service.PostTransaction(): %s", response)

}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/liquidPayment.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	model "github.com/zoobc/zoobc-core/common/model"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("service/liquidPayment.proto", fileDescriptor_0ecb3ba4f033b552) }

var fileDescriptor_0ecb3ba4f033b552 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0xcf, 0xc9, 0x2c, 0x2c, 0xcd, 0x4c, 0x09, 0x48, 0xac, 0xcc, 0x4d, 0xcd,
	0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x4a, 0x4a, 0x49, 0xe6, 0xe6, 0xa7,
	0xa4, 0xe6, 0x60, 0x53, 0x23, 0x25, 0x93, 0x9e, 0x9f, 0x9f, 0x9e, 0x93, 0xaa, 0x9f, 0x58, 0x90,
	0xa9, 0x9f, 0x98, 0x97, 0x97, 0x5f, 0x92, 0x58, 0x92, 0x99, 0x9f, 0x57, 0x0c, 0x91, 0x35, 0x5a,
	0xc3, 0xc8, 0x25, 0xe2, 0x83, 0xac, 0x2b, 0x18, 0x62, 0xa2, 0xd0, 0x64, 0x46, 0x2e, 0x51, 0xf7,
	0xd4, 0x12, 0x88, 0x5c, 0x48, 0x51, 0x62, 0x5e, 0x71, 0x62, 0x32, 0x58, 0xa3, 0x90, 0xb2, 0x1e,
	0xd8, 0x32, 0x3d, 0xac, 0xb2, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x52, 0x2a, 0xf8, 0x15,
	0x15, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x2a, 0xe9, 0x37, 0x5d, 0x7e, 0x32, 0x99, 0x49, 0x53, 0x48,
	0x5d, 0xbf, 0xcc, 0x10, 0xd5, 0xf1, 0xfa, 0x58, 0x35, 0x3a, 0xe9, 0x44, 0x69, 0xa5, 0x67, 0x96,
	0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0x57, 0xe5, 0xe7, 0x27, 0x25, 0x43, 0x48, 0xdd,
	0xe4, 0xfc, 0xa2, 0x54, 0xfd, 0xe4, 0xfc, 0xdc, 0xdc, 0xfc, 0x3c, 0x7d, 0x68, 0xa8, 0x24, 0xb1,
	0x81, 0xfd, 0x68, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x22, 0xa8, 0x42, 0x44, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LiquidPaymentServiceClient is the client API for LiquidPaymentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LiquidPaymentServiceClient interface {
	GetLiquidTransactions(ctx context.Context, in *model.GetLiquidTransactionsRequest, opts ...grpc.CallOption) (*model.GetLiquidTransactionsResponse, error)
}

type liquidPaymentServiceClient struct {
	cc *grpc.ClientConn
}

func NewLiquidPaymentServiceClient(cc *grpc.ClientConn) LiquidPaymentServiceClient {
	return &liquidPaymentServiceClient{cc}
}

func (c *liquidPaymentServiceClient) GetLiquidTransactions(ctx context.Context, in *model.GetLiquidTransactionsRequest, opts ...grpc.CallOption) (*model.GetLiquidTransactionsResponse, error) {
	out := new(model.GetLiquidTransactionsResponse)
	err := c.cc.Invoke(ctx, "/service.LiquidPaymentService/GetLiquidTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LiquidPaymentServiceServer is the server API for LiquidPaymentService service.
type LiquidPaymentServiceServer interface {
	GetLiquidTransactions(context.Context, *model.GetLiquidTransactionsRequest) (*model.GetLiquidTransactionsResponse, error)
}

// UnimplementedLiquidPaymentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLiquidPaymentServiceServer struct {
}

func (*UnimplementedLiquidPaymentServiceServer) GetLiquidTransactions(ctx context.Context, req *model.GetLiquidTransactionsRequest) (*model.GetLiquidTransactionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLiquidTransactions not implemented")
}

func RegisterLiquidPaymentServiceServer(s *grpc.Server, srv LiquidPaymentServiceServer) {
	s.RegisterService(&_LiquidPaymentService_serviceDesc, srv)
}

func _LiquidPaymentService_GetLiquidTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.GetLiquidTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiquidPaymentServiceServer).GetLiquidTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LiquidPaymentService/GetLiquidTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiquidPaymentServiceServer).GetLiquidTransactions(ctx, req.(*model.GetLiquidTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LiquidPaymentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.LiquidPaymentService",
	HandlerType: (*LiquidPaymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLiquidTransactions",
			Handler:    _LiquidPaymentService_GetLiquidTransactions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service/liquidPayment.proto",
}

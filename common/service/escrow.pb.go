// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/escrow.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	model "github.com/zoobc/zoobc-core/common/model"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("service/escrow.proto", fileDescriptor_23585460a3adf6bf)
}

var fileDescriptor_23585460a3adf6bf = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x4f, 0x2d, 0x4e, 0x2e, 0xca, 0x2f, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x62, 0x87, 0x8a, 0x4a, 0x09, 0xe5, 0xe6, 0xa7, 0xa4, 0xe6, 0xa0, 0x48, 0x4a, 0xc9, 0xa4,
	0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x27, 0x16, 0x64, 0xea, 0x27, 0xe6, 0xe5, 0xe5, 0x97, 0x24,
	0x96, 0x64, 0xe6, 0xe7, 0x15, 0x43, 0x64, 0x8d, 0x56, 0x33, 0x71, 0x49, 0xb8, 0x82, 0x95, 0x87,
	0x14, 0x25, 0xe6, 0x15, 0x27, 0x26, 0x83, 0x24, 0x83, 0x21, 0xc6, 0x09, 0x4d, 0x66, 0xe4, 0x12,
	0x75, 0x4f, 0x2d, 0xc1, 0x90, 0x2f, 0x16, 0x52, 0xd6, 0x03, 0xdb, 0xa4, 0x87, 0x55, 0x36, 0x28,
	0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x4a, 0x05, 0xbf, 0xa2, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54,
	0x25, 0xfd, 0xa6, 0xcb, 0x4f, 0x26, 0x33, 0x69, 0x2a, 0xa9, 0xeb, 0x97, 0x19, 0x42, 0x5d, 0xae,
	0x8f, 0xcf, 0x58, 0xa1, 0x4a, 0x2e, 0x11, 0x6c, 0xf2, 0x42, 0x4a, 0x78, 0xac, 0x83, 0x39, 0x89,
	0x17, 0xaa, 0x06, 0xa2, 0x40, 0x49, 0x0f, 0x6c, 0xb7, 0x86, 0x90, 0x1a, 0x01, 0xbb, 0xa1, 0xda,
	0x9d, 0x74, 0xa2, 0xb4, 0xd2, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0xab,
	0xf2, 0xf3, 0x93, 0x92, 0x21, 0xa4, 0x6e, 0x72, 0x7e, 0x51, 0xaa, 0x7e, 0x72, 0x7e, 0x6e, 0x6e,
	0x7e, 0x9e, 0x3e, 0x34, 0x36, 0x92, 0xd8, 0xc0, 0x41, 0x6c, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x87, 0x94, 0x87, 0xcf, 0xb5, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EscrowTransactionServiceClient is the client API for EscrowTransactionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EscrowTransactionServiceClient interface {
	GetEscrowTransactions(ctx context.Context, in *model.GetEscrowTransactionsRequest, opts ...grpc.CallOption) (*model.GetEscrowTransactionsResponse, error)
	GetEscrowTransaction(ctx context.Context, in *model.GetEscrowTransactionRequest, opts ...grpc.CallOption) (*model.Escrow, error)
}

type escrowTransactionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEscrowTransactionServiceClient(cc grpc.ClientConnInterface) EscrowTransactionServiceClient {
	return &escrowTransactionServiceClient{cc}
}

func (c *escrowTransactionServiceClient) GetEscrowTransactions(ctx context.Context, in *model.GetEscrowTransactionsRequest, opts ...grpc.CallOption) (*model.GetEscrowTransactionsResponse, error) {
	out := new(model.GetEscrowTransactionsResponse)
	err := c.cc.Invoke(ctx, "/service.EscrowTransactionService/GetEscrowTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *escrowTransactionServiceClient) GetEscrowTransaction(ctx context.Context, in *model.GetEscrowTransactionRequest, opts ...grpc.CallOption) (*model.Escrow, error) {
	out := new(model.Escrow)
	err := c.cc.Invoke(ctx, "/service.EscrowTransactionService/GetEscrowTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EscrowTransactionServiceServer is the server API for EscrowTransactionService service.
type EscrowTransactionServiceServer interface {
	GetEscrowTransactions(context.Context, *model.GetEscrowTransactionsRequest) (*model.GetEscrowTransactionsResponse, error)
	GetEscrowTransaction(context.Context, *model.GetEscrowTransactionRequest) (*model.Escrow, error)
}

// UnimplementedEscrowTransactionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEscrowTransactionServiceServer struct {
}

func (*UnimplementedEscrowTransactionServiceServer) GetEscrowTransactions(ctx context.Context, req *model.GetEscrowTransactionsRequest) (*model.GetEscrowTransactionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEscrowTransactions not implemented")
}
func (*UnimplementedEscrowTransactionServiceServer) GetEscrowTransaction(ctx context.Context, req *model.GetEscrowTransactionRequest) (*model.Escrow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEscrowTransaction not implemented")
}

func RegisterEscrowTransactionServiceServer(s *grpc.Server, srv EscrowTransactionServiceServer) {
	s.RegisterService(&_EscrowTransactionService_serviceDesc, srv)
}

func _EscrowTransactionService_GetEscrowTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.GetEscrowTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EscrowTransactionServiceServer).GetEscrowTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.EscrowTransactionService/GetEscrowTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EscrowTransactionServiceServer).GetEscrowTransactions(ctx, req.(*model.GetEscrowTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EscrowTransactionService_GetEscrowTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.GetEscrowTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EscrowTransactionServiceServer).GetEscrowTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.EscrowTransactionService/GetEscrowTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EscrowTransactionServiceServer).GetEscrowTransaction(ctx, req.(*model.GetEscrowTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EscrowTransactionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.EscrowTransactionService",
	HandlerType: (*EscrowTransactionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEscrowTransactions",
			Handler:    _EscrowTransactionService_GetEscrowTransactions_Handler,
		},
		{
			MethodName: "GetEscrowTransaction",
			Handler:    _EscrowTransactionService_GetEscrowTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service/escrow.proto",
}

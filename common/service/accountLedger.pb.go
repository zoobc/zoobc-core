// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/accountLedger.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	model "github.com/zoobc/zoobc-core/common/model"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("service/accountLedger.proto", fileDescriptor_3348bbcb1f9dd137)
}

var fileDescriptor_3348bbcb1f9dd137 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x4f, 0x4c, 0x4e, 0xce, 0x2f, 0xcd, 0x2b, 0xf1, 0x49, 0x4d, 0x49, 0x4f,
	0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x4a, 0x4a, 0x49, 0xe6, 0xe6, 0xa7,
	0xa4, 0xe6, 0x60, 0x53, 0x23, 0x25, 0x93, 0x9e, 0x9f, 0x9f, 0x9e, 0x93, 0xaa, 0x9f, 0x58, 0x90,
	0xa9, 0x9f, 0x98, 0x97, 0x97, 0x5f, 0x92, 0x58, 0x92, 0x99, 0x9f, 0x57, 0x0c, 0x91, 0x35, 0x9a,
	0xcb, 0xc8, 0x25, 0xe2, 0x88, 0xac, 0x2b, 0x18, 0x62, 0xa2, 0x50, 0x0b, 0x23, 0x97, 0xa0, 0x7b,
	0x6a, 0x09, 0x8a, 0x5c, 0xb1, 0x90, 0xbc, 0x1e, 0xd8, 0x22, 0x3d, 0x0c, 0x99, 0xa0, 0xd4, 0xc2,
	0xd2, 0xd4, 0xe2, 0x12, 0x29, 0x05, 0xdc, 0x0a, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x95, 0x74,
	0x9a, 0x2e, 0x3f, 0x99, 0xcc, 0xa4, 0x26, 0xa4, 0xa2, 0x5f, 0x66, 0x08, 0x73, 0xb0, 0x6e, 0x0e,
	0x58, 0x91, 0x3e, 0x86, 0x2e, 0x27, 0x9d, 0x28, 0xad, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd,
	0xe4, 0xfc, 0x5c, 0xfd, 0xaa, 0xfc, 0xfc, 0xa4, 0x64, 0x08, 0xa9, 0x9b, 0x9c, 0x5f, 0x94, 0xaa,
	0x9f, 0x9c, 0x9f, 0x9b, 0x9b, 0x9f, 0xa7, 0x0f, 0x0d, 0x86, 0x24, 0x36, 0xb0, 0xa7, 0x8c, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xb6, 0xc2, 0x57, 0xf6, 0x35, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AccountLedgerServiceClient is the client API for AccountLedgerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountLedgerServiceClient interface {
	GetAccountLedgers(ctx context.Context, in *model.GetAccountLedgersRequest, opts ...grpc.CallOption) (*model.GetAccountLedgersResponse, error)
}

type accountLedgerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountLedgerServiceClient(cc grpc.ClientConnInterface) AccountLedgerServiceClient {
	return &accountLedgerServiceClient{cc}
}

func (c *accountLedgerServiceClient) GetAccountLedgers(ctx context.Context, in *model.GetAccountLedgersRequest, opts ...grpc.CallOption) (*model.GetAccountLedgersResponse, error) {
	out := new(model.GetAccountLedgersResponse)
	err := c.cc.Invoke(ctx, "/service.AccountLedgerService/GetAccountLedgers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountLedgerServiceServer is the server API for AccountLedgerService service.
type AccountLedgerServiceServer interface {
	GetAccountLedgers(context.Context, *model.GetAccountLedgersRequest) (*model.GetAccountLedgersResponse, error)
}

// UnimplementedAccountLedgerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAccountLedgerServiceServer struct {
}

func (*UnimplementedAccountLedgerServiceServer) GetAccountLedgers(ctx context.Context, req *model.GetAccountLedgersRequest) (*model.GetAccountLedgersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountLedgers not implemented")
}

func RegisterAccountLedgerServiceServer(s *grpc.Server, srv AccountLedgerServiceServer) {
	s.RegisterService(&_AccountLedgerService_serviceDesc, srv)
}

func _AccountLedgerService_GetAccountLedgers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.GetAccountLedgersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountLedgerServiceServer).GetAccountLedgers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AccountLedgerService/GetAccountLedgers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountLedgerServiceServer).GetAccountLedgers(ctx, req.(*model.GetAccountLedgersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountLedgerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.AccountLedgerService",
	HandlerType: (*AccountLedgerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccountLedgers",
			Handler:    _AccountLedgerService_GetAccountLedgers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service/accountLedger.proto",
}

package util

import (
	"bytes"
	"encoding/base64"
	"testing"
)

func TestAllMerkle(t *testing.T) {
	t.Run("success", func(t *testing.T) {
		merkle := MerkleRoot{}
		hashes := []*bytes.Buffer{
			bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
			bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
			bytes.NewBuffer([]byte{1, 2, 3, 4}),
			bytes.NewBuffer([]byte{4, 3, 2, 1}),
			bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
			bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
			bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
			bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
		}
		result, err := merkle.GenerateMerkleRoot(hashes)
		if err != nil {
			t.Errorf("error occurred when generating merkle root: %v", err)
		}
		nH := merkle.GetIntermediateHashes(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), 0)
		verRes := merkle.VerifyLeaf(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), result, nH)
		if !verRes {
			t.Errorf("nh: %v\nresult: %v\nverres: %v", nH, base64.StdEncoding.EncodeToString(result.Bytes()), verRes)
		}
	})
	t.Run("fail:validation", func(t *testing.T) {
		merkle := MerkleRoot{}
		_, err := merkle.GenerateMerkleRoot([]*bytes.Buffer{
			bytes.NewBuffer([]byte{1, 2, 3, 4, 5}),
			bytes.NewBuffer([]byte{1, 2, 3, 4, 5}),
			bytes.NewBuffer([]byte{1, 2, 3, 4, 5}),
		})
		if err == nil {
			t.Error("1 element should return error")
		}
	})
}

var hashesData8 = []*bytes.Buffer{
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
}

func BenchmarkMerkleTree8(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 1000000; n++ {
		_, err := merkle.GenerateMerkleRoot(hashesData8)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
	}
}

func BenchmarkMerkleTreeValidation8(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 50000; n++ {
		result, err := merkle.GenerateMerkleRoot(hashesData8)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
		nH := merkle.GetIntermediateHashes(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), 0)
		merkle.VerifyLeaf(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), result, nH)
	}
}

var hashesData32 = []*bytes.Buffer{
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
}

func BenchmarkMerkleTree32(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 1000000; n++ {
		_, err := merkle.GenerateMerkleRoot(hashesData32)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
	}
}

func BenchmarkMerkleTreeValidation32(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 50000; n++ {
		result, err := merkle.GenerateMerkleRoot(hashesData32)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
		nH := merkle.GetIntermediateHashes(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), 0)
		merkle.VerifyLeaf(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), result, nH)
	}
}

var hashesData64 = []*bytes.Buffer{
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 45, 76, 88, 91, 12, 33, 30, 61, 82, 90, 8, 72, 87}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
}

func BenchmarkMerkleTree64(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 1000000; n++ {
		_, err := merkle.GenerateMerkleRoot(hashesData64)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
	}
}

func BenchmarkMerkleTreeValidation64(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 50000; n++ {
		result, err := merkle.GenerateMerkleRoot(hashesData64)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
		nH := merkle.GetIntermediateHashes(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), 0)
		merkle.VerifyLeaf(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), result, nH)
	}
}

var hashesData128 = []*bytes.Buffer{
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 45, 76, 88, 91, 12, 33, 30, 61, 82, 90, 8, 72, 87}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
}

func BenchmarkMerkleTree128(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 1000000; n++ {
		_, err := merkle.GenerateMerkleRoot(hashesData128)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
	}
}

func BenchmarkMerkleTreeValidation128(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 50000; n++ {
		result, err := merkle.GenerateMerkleRoot(hashesData128)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
		nH := merkle.GetIntermediateHashes(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), 0)
		merkle.VerifyLeaf(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), result, nH)
	}
}

var hashesData256 = []*bytes.Buffer{
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 45, 76, 88, 91, 12, 33, 30, 61, 82, 90, 8, 72, 87}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
}

func BenchmarkMerkleTree256(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 1000000; n++ {
		_, err := merkle.GenerateMerkleRoot(hashesData256)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
	}
}

func BenchmarkMerkleTreeValidation256(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 50000; n++ {
		result, err := merkle.GenerateMerkleRoot(hashesData256)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
		nH := merkle.GetIntermediateHashes(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), 0)
		merkle.VerifyLeaf(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), result, nH)
	}
}

var hashesData512 = []*bytes.Buffer{
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 45, 76, 88, 91, 12, 33, 30, 61, 82, 90, 8, 72, 87}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 3, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 3, 3, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
}

func BenchmarkMerkleTree512(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 1000000; n++ {
		_, err := merkle.GenerateMerkleRoot(hashesData512)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
	}
}

func BenchmarkMerkleTreeValidation512(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 50000; n++ {
		result, err := merkle.GenerateMerkleRoot(hashesData512)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
		nH := merkle.GetIntermediateHashes(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), 0)
		merkle.VerifyLeaf(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), result, nH)
	}
}

var hashesData1024 = []*bytes.Buffer{
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 45, 76, 88, 91, 12, 33, 30, 61, 82, 90, 8, 72, 87}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 3, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 90, 21, 7, 9, 22, 44, 13, 17, 75, 92, 86}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 45, 76, 88, 91, 12, 33, 30, 61, 82, 90, 8, 72, 87}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 3, 3, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 3, 3, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}),
	bytes.NewBuffer([]byte{8, 7, 6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4}),
	bytes.NewBuffer([]byte{4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6}),
	bytes.NewBuffer([]byte{6, 5, 4, 3, 2, 1}),
	bytes.NewBuffer([]byte{1, 1, 2, 2, 3, 3, 4, 4}),
	bytes.NewBuffer([]byte{4, 4, 3, 3, 2, 2, 1, 1, 7, 8, 9, 10, 24, 9, 64, 9, 8, 20, 64, 31, 18, 9, 44, 5, 21}),
}

func BenchmarkMerkleTree1024(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 1000000; n++ {
		_, err := merkle.GenerateMerkleRoot(hashesData1024)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
	}
}

func BenchmarkMerkleTreeValidation1024(b *testing.B) {
	merkle := MerkleRoot{}
	for n := 0; n < 50000; n++ {
		result, err := merkle.GenerateMerkleRoot(hashesData1024)
		if err != nil {
			b.Errorf("error occurred when generating merkle root: %v", err)
		}
		nH := merkle.GetIntermediateHashes(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), 0)
		merkle.VerifyLeaf(bytes.NewBuffer([]byte{1, 2, 3, 4, 5, 6, 7, 8}), result, nH)
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/multiSignature.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MultiSignatureInfo struct {
	MinimumSignatures    uint32   `protobuf:"varint,1,opt,name=MinimumSignatures,proto3" json:"MinimumSignatures,omitempty"`
	Nonce                int64    `protobuf:"varint,2,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	Addresses            []string `protobuf:"bytes,3,rep,name=Addresses,proto3" json:"Addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiSignatureInfo) Reset()         { *m = MultiSignatureInfo{} }
func (m *MultiSignatureInfo) String() string { return proto.CompactTextString(m) }
func (*MultiSignatureInfo) ProtoMessage()    {}
func (*MultiSignatureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_136af44c597c17ae, []int{0}
}

func (m *MultiSignatureInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiSignatureInfo.Unmarshal(m, b)
}
func (m *MultiSignatureInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiSignatureInfo.Marshal(b, m, deterministic)
}
func (m *MultiSignatureInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiSignatureInfo.Merge(m, src)
}
func (m *MultiSignatureInfo) XXX_Size() int {
	return xxx_messageInfo_MultiSignatureInfo.Size(m)
}
func (m *MultiSignatureInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiSignatureInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MultiSignatureInfo proto.InternalMessageInfo

func (m *MultiSignatureInfo) GetMinimumSignatures() uint32 {
	if m != nil {
		return m.MinimumSignatures
	}
	return 0
}

func (m *MultiSignatureInfo) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *MultiSignatureInfo) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type SignatureInfo struct {
	TransactionHash      []byte            `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	Signatures           map[string][]byte `protobuf:"bytes,2,rep,name=Signatures,proto3" json:"Signatures,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SignatureInfo) Reset()         { *m = SignatureInfo{} }
func (m *SignatureInfo) String() string { return proto.CompactTextString(m) }
func (*SignatureInfo) ProtoMessage()    {}
func (*SignatureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_136af44c597c17ae, []int{1}
}

func (m *SignatureInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureInfo.Unmarshal(m, b)
}
func (m *SignatureInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureInfo.Marshal(b, m, deterministic)
}
func (m *SignatureInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureInfo.Merge(m, src)
}
func (m *SignatureInfo) XXX_Size() int {
	return xxx_messageInfo_SignatureInfo.Size(m)
}
func (m *SignatureInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureInfo proto.InternalMessageInfo

func (m *SignatureInfo) GetTransactionHash() []byte {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

func (m *SignatureInfo) GetSignatures() map[string][]byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

func init() {
	proto.RegisterType((*MultiSignatureInfo)(nil), "model.MultiSignatureInfo")
	proto.RegisterType((*SignatureInfo)(nil), "model.SignatureInfo")
	proto.RegisterMapType((map[string][]byte)(nil), "model.SignatureInfo.SignaturesEntry")
}

func init() { proto.RegisterFile("model/multiSignature.proto", fileDescriptor_136af44c597c17ae) }

var fileDescriptor_136af44c597c17ae = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x49, 0xcb, 0x84, 0x3e, 0x37, 0xa6, 0xc1, 0x43, 0x19, 0x1e, 0xca, 0xf0, 0x10, 0x44,
	0x5b, 0xd1, 0x8b, 0x08, 0x1e, 0x1c, 0x0a, 0x7a, 0x98, 0x87, 0xe8, 0xc9, 0x5b, 0x9b, 0xc6, 0x2d,
	0xd8, 0xe4, 0x49, 0x92, 0x0a, 0xdb, 0x87, 0xf3, 0xb3, 0x89, 0x29, 0xb8, 0x75, 0x5e, 0x42, 0xde,
	0xef, 0x47, 0xf2, 0x7f, 0xef, 0xc1, 0x44, 0x63, 0x2d, 0x9b, 0x42, 0xb7, 0x8d, 0x57, 0x2f, 0x6a,
	0x61, 0x4a, 0xdf, 0x5a, 0x99, 0x7f, 0x5a, 0xf4, 0x48, 0x07, 0xc1, 0x4d, 0xd7, 0x40, 0xe7, 0x3d,
	0xfd, 0x64, 0xde, 0x91, 0x9e, 0xc1, 0xe1, 0x5c, 0x19, 0xa5, 0x5b, 0xfd, 0xc7, 0x5d, 0x4a, 0x32,
	0xc2, 0x46, 0xfc, 0xbf, 0xa0, 0x29, 0x0c, 0x9e, 0xd1, 0x08, 0x99, 0x46, 0x19, 0x61, 0xf1, 0x2c,
	0xba, 0x20, 0xbc, 0x03, 0xf4, 0x18, 0x92, 0xbb, 0xba, 0xb6, 0xd2, 0x39, 0xe9, 0xd2, 0x38, 0x8b,
	0x59, 0xc2, 0x37, 0x60, 0xfa, 0x4d, 0x60, 0xd4, 0xcf, 0x65, 0x30, 0x7e, 0xb5, 0xa5, 0x71, 0xa5,
	0xf0, 0x0a, 0xcd, 0x63, 0xe9, 0x96, 0x21, 0x75, 0xc8, 0x77, 0x31, 0xbd, 0x07, 0xd8, 0x6a, 0x2d,
	0xca, 0x62, 0xb6, 0x7f, 0x79, 0x92, 0x87, 0x99, 0xf2, 0xde, 0x9f, 0x9b, 0xca, 0x3d, 0x18, 0x6f,
	0x57, 0x7c, 0xeb, 0xdd, 0xe4, 0x16, 0xc6, 0x3b, 0x9a, 0x1e, 0x40, 0xfc, 0x21, 0x57, 0x21, 0x36,
	0xe1, 0xbf, 0x57, 0x7a, 0x04, 0x83, 0xaf, 0xb2, 0x69, 0xbb, 0xf1, 0x86, 0xbc, 0x2b, 0x6e, 0xa2,
	0x6b, 0x32, 0x3b, 0x7d, 0x63, 0x0b, 0xe5, 0x97, 0x6d, 0x95, 0x0b, 0xd4, 0xc5, 0x1a, 0xb1, 0x12,
	0xdd, 0x79, 0x2e, 0xd0, 0xca, 0x42, 0xa0, 0xd6, 0x68, 0x8a, 0xd0, 0x54, 0xb5, 0x17, 0xd6, 0x7e,
	0xf5, 0x13, 0x00, 0x00, 0xff, 0xff, 0xe7, 0xa0, 0xec, 0xdf, 0x94, 0x01, 0x00, 0x00,
}

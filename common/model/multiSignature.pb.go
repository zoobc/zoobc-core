// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/multiSignature.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PendingTransactionStatus int32

const (
	PendingTransactionStatus_PendingTransactionPending  PendingTransactionStatus = 0
	PendingTransactionStatus_PendingTransactionExecuted PendingTransactionStatus = 1
	PendingTransactionStatus_PendingTransactionNoOp     PendingTransactionStatus = 2
	PendingTransactionStatus_PendingTransactionExpired  PendingTransactionStatus = 3
)

var PendingTransactionStatus_name = map[int32]string{
	0: "PendingTransactionPending",
	1: "PendingTransactionExecuted",
	2: "PendingTransactionNoOp",
	3: "PendingTransactionExpired",
}

var PendingTransactionStatus_value = map[string]int32{
	"PendingTransactionPending":  0,
	"PendingTransactionExecuted": 1,
	"PendingTransactionNoOp":     2,
	"PendingTransactionExpired":  3,
}

func (x PendingTransactionStatus) String() string {
	return proto.EnumName(PendingTransactionStatus_name, int32(x))
}

func (PendingTransactionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_136af44c597c17ae, []int{0}
}

type MultiSignatureInfo struct {
	MinimumSignatures    uint32   `protobuf:"varint,1,opt,name=MinimumSignatures,proto3" json:"MinimumSignatures,omitempty"`
	Nonce                int64    `protobuf:"varint,2,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	Addresses            []string `protobuf:"bytes,3,rep,name=Addresses,proto3" json:"Addresses,omitempty"`
	MultisigAddress      string   `protobuf:"bytes,4,opt,name=MultisigAddress,proto3" json:"MultisigAddress,omitempty"`
	BlockHeight          uint32   `protobuf:"varint,5,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiSignatureInfo) Reset()         { *m = MultiSignatureInfo{} }
func (m *MultiSignatureInfo) String() string { return proto.CompactTextString(m) }
func (*MultiSignatureInfo) ProtoMessage()    {}
func (*MultiSignatureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_136af44c597c17ae, []int{0}
}

func (m *MultiSignatureInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiSignatureInfo.Unmarshal(m, b)
}
func (m *MultiSignatureInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiSignatureInfo.Marshal(b, m, deterministic)
}
func (m *MultiSignatureInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiSignatureInfo.Merge(m, src)
}
func (m *MultiSignatureInfo) XXX_Size() int {
	return xxx_messageInfo_MultiSignatureInfo.Size(m)
}
func (m *MultiSignatureInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiSignatureInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MultiSignatureInfo proto.InternalMessageInfo

func (m *MultiSignatureInfo) GetMinimumSignatures() uint32 {
	if m != nil {
		return m.MinimumSignatures
	}
	return 0
}

func (m *MultiSignatureInfo) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *MultiSignatureInfo) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *MultiSignatureInfo) GetMultisigAddress() string {
	if m != nil {
		return m.MultisigAddress
	}
	return ""
}

func (m *MultiSignatureInfo) GetBlockHeight() uint32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

// represent the signature posted by account
type SignatureInfo struct {
	TransactionHash      []byte            `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	Signatures           map[string][]byte `protobuf:"bytes,2,rep,name=Signatures,proto3" json:"Signatures,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SignatureInfo) Reset()         { *m = SignatureInfo{} }
func (m *SignatureInfo) String() string { return proto.CompactTextString(m) }
func (*SignatureInfo) ProtoMessage()    {}
func (*SignatureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_136af44c597c17ae, []int{1}
}

func (m *SignatureInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureInfo.Unmarshal(m, b)
}
func (m *SignatureInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureInfo.Marshal(b, m, deterministic)
}
func (m *SignatureInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureInfo.Merge(m, src)
}
func (m *SignatureInfo) XXX_Size() int {
	return xxx_messageInfo_SignatureInfo.Size(m)
}
func (m *SignatureInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureInfo proto.InternalMessageInfo

func (m *SignatureInfo) GetTransactionHash() []byte {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

func (m *SignatureInfo) GetSignatures() map[string][]byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

// represent the pending signature counter stored by node for multi-signature transaction
type PendingSignature struct {
	TransactionHash      []byte   `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	AccountAddress       string   `protobuf:"bytes,2,opt,name=AccountAddress,proto3" json:"AccountAddress,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=Signature,proto3" json:"Signature,omitempty"`
	BlockHeight          uint32   `protobuf:"varint,4,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PendingSignature) Reset()         { *m = PendingSignature{} }
func (m *PendingSignature) String() string { return proto.CompactTextString(m) }
func (*PendingSignature) ProtoMessage()    {}
func (*PendingSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_136af44c597c17ae, []int{2}
}

func (m *PendingSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingSignature.Unmarshal(m, b)
}
func (m *PendingSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingSignature.Marshal(b, m, deterministic)
}
func (m *PendingSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingSignature.Merge(m, src)
}
func (m *PendingSignature) XXX_Size() int {
	return xxx_messageInfo_PendingSignature.Size(m)
}
func (m *PendingSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingSignature.DiscardUnknown(m)
}

var xxx_messageInfo_PendingSignature proto.InternalMessageInfo

func (m *PendingSignature) GetTransactionHash() []byte {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

func (m *PendingSignature) GetAccountAddress() string {
	if m != nil {
		return m.AccountAddress
	}
	return ""
}

func (m *PendingSignature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *PendingSignature) GetBlockHeight() uint32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

// represent transaction inside multisig body
type PendingTransaction struct {
	TransactionHash      []byte                   `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	TransactionBytes     []byte                   `protobuf:"bytes,2,opt,name=TransactionBytes,proto3" json:"TransactionBytes,omitempty"`
	Status               PendingTransactionStatus `protobuf:"varint,3,opt,name=Status,proto3,enum=model.PendingTransactionStatus" json:"Status,omitempty"`
	BlockHeight          uint32                   `protobuf:"varint,4,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PendingTransaction) Reset()         { *m = PendingTransaction{} }
func (m *PendingTransaction) String() string { return proto.CompactTextString(m) }
func (*PendingTransaction) ProtoMessage()    {}
func (*PendingTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_136af44c597c17ae, []int{3}
}

func (m *PendingTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingTransaction.Unmarshal(m, b)
}
func (m *PendingTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingTransaction.Marshal(b, m, deterministic)
}
func (m *PendingTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingTransaction.Merge(m, src)
}
func (m *PendingTransaction) XXX_Size() int {
	return xxx_messageInfo_PendingTransaction.Size(m)
}
func (m *PendingTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_PendingTransaction proto.InternalMessageInfo

func (m *PendingTransaction) GetTransactionHash() []byte {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

func (m *PendingTransaction) GetTransactionBytes() []byte {
	if m != nil {
		return m.TransactionBytes
	}
	return nil
}

func (m *PendingTransaction) GetStatus() PendingTransactionStatus {
	if m != nil {
		return m.Status
	}
	return PendingTransactionStatus_PendingTransactionPending
}

func (m *PendingTransaction) GetBlockHeight() uint32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func init() {
	proto.RegisterEnum("model.PendingTransactionStatus", PendingTransactionStatus_name, PendingTransactionStatus_value)
	proto.RegisterType((*MultiSignatureInfo)(nil), "model.MultiSignatureInfo")
	proto.RegisterType((*SignatureInfo)(nil), "model.SignatureInfo")
	proto.RegisterMapType((map[string][]byte)(nil), "model.SignatureInfo.SignaturesEntry")
	proto.RegisterType((*PendingSignature)(nil), "model.PendingSignature")
	proto.RegisterType((*PendingTransaction)(nil), "model.PendingTransaction")
}

func init() { proto.RegisterFile("model/multiSignature.proto", fileDescriptor_136af44c597c17ae) }

var fileDescriptor_136af44c597c17ae = []byte{
	// 454 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xdd, 0x6e, 0xd3, 0x30,
	0x1c, 0xc5, 0x71, 0xb2, 0x4e, 0xea, 0x7f, 0x1f, 0x0d, 0x16, 0x42, 0xa6, 0xe2, 0x23, 0xaa, 0x10,
	0xb2, 0x2a, 0x68, 0xd1, 0xb8, 0x00, 0x21, 0x71, 0xb1, 0x8a, 0x4a, 0xe3, 0x62, 0x03, 0x79, 0x5c,
	0x71, 0x97, 0x3a, 0x26, 0xb5, 0xd6, 0xd8, 0x55, 0x6c, 0xa3, 0x95, 0xe7, 0xe0, 0x11, 0x78, 0x0e,
	0xee, 0xe0, 0xb9, 0xd0, 0x9c, 0xd0, 0xa6, 0x09, 0x08, 0xf5, 0x26, 0x8a, 0x7f, 0xc7, 0x39, 0x3e,
	0xff, 0x63, 0x05, 0xfa, 0xb9, 0x4e, 0xc5, 0x62, 0x9c, 0xbb, 0x85, 0x95, 0x97, 0x32, 0x53, 0x89,
	0x75, 0x85, 0x18, 0x2d, 0x0b, 0x6d, 0x35, 0xee, 0x78, 0x6d, 0xf0, 0x0b, 0x01, 0x3e, 0xdf, 0xd2,
	0xdf, 0xa9, 0xcf, 0x1a, 0x3f, 0x85, 0xdb, 0xe7, 0x52, 0xc9, 0xdc, 0xe5, 0x6b, 0x6e, 0x08, 0x8a,
	0x11, 0x3d, 0x62, 0x6d, 0x01, 0x13, 0xe8, 0x5c, 0x68, 0xc5, 0x05, 0x09, 0x62, 0x44, 0xc3, 0x49,
	0xf0, 0x1c, 0xb1, 0x12, 0xe0, 0xfb, 0xd0, 0x3d, 0x4d, 0xd3, 0x42, 0x18, 0x23, 0x0c, 0x09, 0xe3,
	0x90, 0x76, 0xd9, 0x06, 0x60, 0x0a, 0x3d, 0x7f, 0xb6, 0x91, 0x59, 0x05, 0xc9, 0x5e, 0x8c, 0x68,
	0x97, 0x35, 0x31, 0x8e, 0xe1, 0x60, 0xb2, 0xd0, 0xfc, 0xea, 0x4c, 0xc8, 0x6c, 0x6e, 0x49, 0xc7,
	0x27, 0xa9, 0xa3, 0xc1, 0x0f, 0x04, 0x47, 0xdb, 0x33, 0x50, 0xe8, 0x7d, 0x2c, 0x12, 0x65, 0x12,
	0x6e, 0xa5, 0x56, 0x67, 0x89, 0x99, 0xfb, 0x09, 0x0e, 0x59, 0x13, 0xe3, 0xb7, 0x00, 0xb5, 0x31,
	0x83, 0x38, 0xa4, 0x07, 0x27, 0x8f, 0x47, 0xbe, 0xa0, 0xd1, 0x96, 0xe7, 0x66, 0x65, 0xa6, 0xca,
	0x16, 0x2b, 0x56, 0xfb, 0xae, 0xff, 0x06, 0x7a, 0x0d, 0x19, 0x47, 0x10, 0x5e, 0x89, 0x95, 0x3f,
	0xb6, 0xcb, 0x6e, 0x5e, 0xf1, 0x1d, 0xe8, 0x7c, 0x49, 0x16, 0xae, 0xac, 0xea, 0x90, 0x95, 0x8b,
	0xd7, 0xc1, 0x2b, 0x34, 0xf8, 0x8e, 0x20, 0xfa, 0x20, 0x54, 0x2a, 0x55, 0xb6, 0xb6, 0xd9, 0x61,
	0x86, 0x27, 0x70, 0x7c, 0xca, 0xb9, 0x76, 0xca, 0xfe, 0xa9, 0x32, 0xf0, 0xa7, 0x36, 0xe8, 0xcd,
	0x8d, 0xac, 0xed, 0x49, 0xe8, 0xbd, 0x36, 0xa0, 0xd9, 0xf3, 0x5e, 0xbb, 0xe7, 0x9f, 0x08, 0x70,
	0x15, 0xb3, 0x16, 0x61, 0x87, 0xa0, 0x43, 0x88, 0x6a, 0x68, 0xb2, 0xb2, 0xc2, 0x54, 0x65, 0xb4,
	0x38, 0x7e, 0x09, 0xfb, 0x97, 0x36, 0xb1, 0xce, 0xf8, 0xa4, 0xc7, 0x27, 0x8f, 0xaa, 0x4b, 0x69,
	0x07, 0x28, 0xb7, 0xb1, 0x6a, 0xfb, 0xff, 0xe7, 0x18, 0x7e, 0x43, 0x40, 0xfe, 0x65, 0x83, 0x1f,
	0xc0, 0xbd, 0xb6, 0x56, 0x91, 0xe8, 0x16, 0x7e, 0x08, 0xfd, 0xb6, 0x3c, 0xbd, 0x16, 0xdc, 0x59,
	0x91, 0x46, 0x08, 0xf7, 0xe1, 0x6e, 0x5b, 0xbf, 0xd0, 0xef, 0x97, 0x51, 0xf0, 0x77, 0xeb, 0xe9,
	0xf5, 0x52, 0x16, 0x22, 0x8d, 0xc2, 0xc9, 0xf0, 0x13, 0xcd, 0xa4, 0x9d, 0xbb, 0xd9, 0x88, 0xeb,
	0x7c, 0xfc, 0x55, 0xeb, 0x19, 0x2f, 0x9f, 0xcf, 0xb8, 0x2e, 0xc4, 0x98, 0xeb, 0x3c, 0xd7, 0x6a,
	0xec, 0x5b, 0x98, 0xed, 0xfb, 0x3f, 0xf9, 0xc5, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x15,
	0x8a, 0xed, 0xe7, 0x03, 0x00, 0x00,
}

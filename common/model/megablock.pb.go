// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/megablock.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// MegablockType type of megablock (as of now only snapshot)
type MegablockType int32

const (
	MegablockType_Snapshot MegablockType = 0
)

var MegablockType_name = map[int32]string{
	0: "Snapshot",
}

var MegablockType_value = map[string]int32{
	"Snapshot": 0,
}

func (x MegablockType) String() string {
	return proto.EnumName(MegablockType_name, int32(x))
}

func (MegablockType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2b40a10b4e757ea5, []int{0}
}

// Megablock represent the megablock data structure stored in the database
type Megablock struct {
	// ID computed as the little endian of the megablock hash (hash of all megablock fields but the ID)
	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// FullFileHash hash of the full - completed (snapshot) file
	FullFileHash []byte `protobuf:"bytes,2,opt,name=FullFileHash,proto3" json:"FullFileHash,omitempty"`
	// FileChunkHashes sequence of hashes (sha256 = 32 byte) of file chunks (sorted) referenced by the megablock
	FileChunkHashes []byte `protobuf:"bytes,3,opt,name=FileChunkHashes,proto3" json:"FileChunkHashes,omitempty"`
	// MegablockHeight height (on the mainchain) at which the (snapshot) file started been computed
	// Note: this is not the last mainchain height contained in the snapshot file (that one should be = MegablockHeight - MinRollbackBlocks)
	MegablockHeight uint32 `protobuf:"varint,4,opt,name=MegablockHeight,proto3" json:"MegablockHeight,omitempty"`
	// Number indicating chaintype (at the moment it can only be mainchain, but in future could be others)
	ChainType int32 `protobuf:"varint,5,opt,name=ChainType,proto3" json:"ChainType,omitempty"`
	// MegablockType type of megablock
	MegablockType MegablockType `protobuf:"varint,6,opt,name=MegablockType,proto3,enum=model.MegablockType" json:"MegablockType,omitempty"`
	// ExpirationTimestamp timestamp that marks the end of megablock processing
	ExpirationTimestamp  int64    `protobuf:"varint,7,opt,name=ExpirationTimestamp,proto3" json:"ExpirationTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Megablock) Reset()         { *m = Megablock{} }
func (m *Megablock) String() string { return proto.CompactTextString(m) }
func (*Megablock) ProtoMessage()    {}
func (*Megablock) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b40a10b4e757ea5, []int{0}
}

func (m *Megablock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Megablock.Unmarshal(m, b)
}
func (m *Megablock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Megablock.Marshal(b, m, deterministic)
}
func (m *Megablock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Megablock.Merge(m, src)
}
func (m *Megablock) XXX_Size() int {
	return xxx_messageInfo_Megablock.Size(m)
}
func (m *Megablock) XXX_DiscardUnknown() {
	xxx_messageInfo_Megablock.DiscardUnknown(m)
}

var xxx_messageInfo_Megablock proto.InternalMessageInfo

func (m *Megablock) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Megablock) GetFullFileHash() []byte {
	if m != nil {
		return m.FullFileHash
	}
	return nil
}

func (m *Megablock) GetFileChunkHashes() []byte {
	if m != nil {
		return m.FileChunkHashes
	}
	return nil
}

func (m *Megablock) GetMegablockHeight() uint32 {
	if m != nil {
		return m.MegablockHeight
	}
	return 0
}

func (m *Megablock) GetChainType() int32 {
	if m != nil {
		return m.ChainType
	}
	return 0
}

func (m *Megablock) GetMegablockType() MegablockType {
	if m != nil {
		return m.MegablockType
	}
	return MegablockType_Snapshot
}

func (m *Megablock) GetExpirationTimestamp() int64 {
	if m != nil {
		return m.ExpirationTimestamp
	}
	return 0
}

func init() {
	proto.RegisterEnum("model.MegablockType", MegablockType_name, MegablockType_value)
	proto.RegisterType((*Megablock)(nil), "model.Megablock")
}

func init() { proto.RegisterFile("model/megablock.proto", fileDescriptor_2b40a10b4e757ea5) }

var fileDescriptor_2b40a10b4e757ea5 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0x4d, 0xe7, 0xa6, 0x0b, 0x9d, 0x4a, 0x54, 0xc8, 0x41, 0xa1, 0xec, 0x14, 0x06, 0xb6,
	0x43, 0x6f, 0x1e, 0xb7, 0x39, 0xb6, 0x83, 0x97, 0xb8, 0x93, 0xb7, 0xb4, 0x86, 0x26, 0xac, 0xe9,
	0x17, 0xda, 0x14, 0xd4, 0xbf, 0xe3, 0x1f, 0x95, 0x46, 0x9c, 0xb4, 0x78, 0x09, 0xe1, 0x79, 0x9f,
	0xf0, 0xe5, 0xfd, 0xf0, 0xb5, 0x81, 0x37, 0x59, 0x24, 0x46, 0xe6, 0x22, 0x2d, 0x20, 0xdb, 0xc7,
	0xb6, 0x02, 0x07, 0x64, 0xe8, 0xf1, 0xf4, 0x2b, 0xc0, 0xe3, 0xe7, 0xdf, 0x88, 0x10, 0x1c, 0x6c,
	0x57, 0x14, 0x45, 0x88, 0x0d, 0x16, 0xc1, 0x1c, 0xf1, 0x60, 0xbb, 0x22, 0x53, 0x1c, 0xae, 0x9b,
	0xa2, 0x58, 0xeb, 0x42, 0x6e, 0x44, 0xad, 0x68, 0x10, 0x21, 0x16, 0xf2, 0x0e, 0x23, 0x0c, 0x9f,
	0xb7, 0xf7, 0xa5, 0x6a, 0xca, 0x7d, 0x0b, 0x64, 0x4d, 0x07, 0x5e, 0xeb, 0xe3, 0xd6, 0x3c, 0x8c,
	0xdb, 0x48, 0x9d, 0x2b, 0x47, 0x8f, 0x23, 0xc4, 0x26, 0xbc, 0x8f, 0xc9, 0x0d, 0x1e, 0x2f, 0x95,
	0xd0, 0xe5, 0xee, 0xc3, 0x4a, 0x3a, 0x8c, 0x10, 0x1b, 0xf2, 0x3f, 0x40, 0x1e, 0xf1, 0xe4, 0xf0,
	0xc0, 0x1b, 0xa3, 0x08, 0xb1, 0xb3, 0xfb, 0xab, 0xd8, 0xd7, 0x8a, 0x3b, 0x19, 0xef, 0xaa, 0x64,
	0x8e, 0x2f, 0x9f, 0xde, 0xad, 0xae, 0x84, 0xd3, 0x50, 0xee, 0xb4, 0x91, 0xb5, 0x13, 0xc6, 0xd2,
	0x93, 0xb6, 0x36, 0xff, 0x2f, 0x9a, 0xdd, 0xf6, 0xa6, 0x91, 0x10, 0x9f, 0xbe, 0x94, 0xc2, 0xd6,
	0x0a, 0xdc, 0xc5, 0xd1, 0x62, 0xf6, 0xca, 0x72, 0xed, 0x54, 0x93, 0xc6, 0x19, 0x98, 0xe4, 0x13,
	0x20, 0xcd, 0x7e, 0xce, 0xbb, 0x0c, 0x2a, 0x99, 0x64, 0x60, 0x0c, 0x94, 0x89, 0xff, 0x59, 0x3a,
	0xf2, 0xeb, 0x7f, 0xf8, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x81, 0xdd, 0x62, 0x2f, 0x97, 0x01, 0x00,
	0x00,
}

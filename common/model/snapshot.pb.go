// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/snapshot.proto

package model

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// SnapshotFileInfo model to pass data between snapshot and spineBlockManifest interfaces
type SnapshotFileInfo struct {
	SnapshotFileHash           []byte                 `protobuf:"bytes,1,opt,name=SnapshotFileHash,proto3" json:"SnapshotFileHash,omitempty"`
	Height                     uint32                 `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
	ProcessExpirationTimestamp int64                  `protobuf:"varint,3,opt,name=ProcessExpirationTimestamp,proto3" json:"ProcessExpirationTimestamp,omitempty"`
	ChainType                  int32                  `protobuf:"varint,4,opt,name=ChainType,proto3" json:"ChainType,omitempty"`
	SpineBlockManifestType     SpineBlockManifestType `protobuf:"varint,5,opt,name=SpineBlockManifestType,proto3,enum=model.SpineBlockManifestType" json:"SpineBlockManifestType,omitempty"`
	FileChunksHashes           [][]byte               `protobuf:"bytes,6,rep,name=FileChunksHashes,proto3" json:"FileChunksHashes,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}               `json:"-"`
	XXX_unrecognized           []byte                 `json:"-"`
	XXX_sizecache              int32                  `json:"-"`
}

func (m *SnapshotFileInfo) Reset()         { *m = SnapshotFileInfo{} }
func (m *SnapshotFileInfo) String() string { return proto.CompactTextString(m) }
func (*SnapshotFileInfo) ProtoMessage()    {}
func (*SnapshotFileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d9d8140a8c06fc6, []int{0}
}

func (m *SnapshotFileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotFileInfo.Unmarshal(m, b)
}
func (m *SnapshotFileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotFileInfo.Marshal(b, m, deterministic)
}
func (m *SnapshotFileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotFileInfo.Merge(m, src)
}
func (m *SnapshotFileInfo) XXX_Size() int {
	return xxx_messageInfo_SnapshotFileInfo.Size(m)
}
func (m *SnapshotFileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotFileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotFileInfo proto.InternalMessageInfo

func (m *SnapshotFileInfo) GetSnapshotFileHash() []byte {
	if m != nil {
		return m.SnapshotFileHash
	}
	return nil
}

func (m *SnapshotFileInfo) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *SnapshotFileInfo) GetProcessExpirationTimestamp() int64 {
	if m != nil {
		return m.ProcessExpirationTimestamp
	}
	return 0
}

func (m *SnapshotFileInfo) GetChainType() int32 {
	if m != nil {
		return m.ChainType
	}
	return 0
}

func (m *SnapshotFileInfo) GetSpineBlockManifestType() SpineBlockManifestType {
	if m != nil {
		return m.SpineBlockManifestType
	}
	return SpineBlockManifestType_Snapshot
}

func (m *SnapshotFileInfo) GetFileChunksHashes() [][]byte {
	if m != nil {
		return m.FileChunksHashes
	}
	return nil
}

// SnapshotPayload snapshot data
type SnapshotPayload struct {
	Blocks                     []*Block                     `protobuf:"bytes,1,rep,name=Blocks,proto3" json:"Blocks,omitempty"`
	AccountBalances            []*AccountBalance            `protobuf:"bytes,2,rep,name=AccountBalances,proto3" json:"AccountBalances,omitempty"`
	NodeRegistrations          []*NodeRegistration          `protobuf:"bytes,3,rep,name=NodeRegistrations,proto3" json:"NodeRegistrations,omitempty"`
	AccountDatasets            []*AccountDataset            `protobuf:"bytes,4,rep,name=AccountDatasets,proto3" json:"AccountDatasets,omitempty"`
	ParticipationScores        []*ParticipationScore        `protobuf:"bytes,5,rep,name=ParticipationScores,proto3" json:"ParticipationScores,omitempty"`
	PublishedReceipts          []*PublishedReceipt          `protobuf:"bytes,6,rep,name=PublishedReceipts,proto3" json:"PublishedReceipts,omitempty"`
	EscrowTransactions         []*Escrow                    `protobuf:"bytes,7,rep,name=EscrowTransactions,proto3" json:"EscrowTransactions,omitempty"`
	PendingTransactions        []*PendingTransaction        `protobuf:"bytes,8,rep,name=PendingTransactions,proto3" json:"PendingTransactions,omitempty"`
	PendingSignatures          []*PendingSignature          `protobuf:"bytes,9,rep,name=PendingSignatures,proto3" json:"PendingSignatures,omitempty"`
	MultiSignatureInfos        []*MultiSignatureInfo        `protobuf:"bytes,10,rep,name=MultiSignatureInfos,proto3" json:"MultiSignatureInfos,omitempty"`
	SkippedBlocksmiths         []*SkippedBlocksmith         `protobuf:"bytes,11,rep,name=SkippedBlocksmiths,proto3" json:"SkippedBlocksmiths,omitempty"`
	FeeScale                   []*FeeScale                  `protobuf:"bytes,12,rep,name=FeeScale,proto3" json:"FeeScale,omitempty"`
	FeeVoteCommitmentVote      []*FeeVoteCommitmentVote     `protobuf:"bytes,13,rep,name=FeeVoteCommitmentVote,proto3" json:"FeeVoteCommitmentVote,omitempty"`
	FeeVoteRevealVote          []*FeeVoteRevealVote         `protobuf:"bytes,14,rep,name=FeeVoteRevealVote,proto3" json:"FeeVoteRevealVote,omitempty"`
	LiquidPayment              []*LiquidPayment             `protobuf:"bytes,15,rep,name=LiquidPayment,proto3" json:"LiquidPayment,omitempty"`
	NodeAdmissionTimestamp     []*NodeAdmissionTimestamp    `protobuf:"bytes,16,rep,name=NodeAdmissionTimestamp,proto3" json:"NodeAdmissionTimestamp,omitempty"`
	MultiSignatureParticipants []*MultiSignatureParticipant `protobuf:"bytes,16,rep,name=MultiSignatureParticipants,proto3" json:"MultiSignatureParticipants,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                     `json:"-"`
	XXX_unrecognized           []byte                       `json:"-"`
	XXX_sizecache              int32                        `json:"-"`
}

func (m *SnapshotPayload) Reset()         { *m = SnapshotPayload{} }
func (m *SnapshotPayload) String() string { return proto.CompactTextString(m) }
func (*SnapshotPayload) ProtoMessage()    {}
func (*SnapshotPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d9d8140a8c06fc6, []int{1}
}

func (m *SnapshotPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotPayload.Unmarshal(m, b)
}
func (m *SnapshotPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotPayload.Marshal(b, m, deterministic)
}
func (m *SnapshotPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotPayload.Merge(m, src)
}
func (m *SnapshotPayload) XXX_Size() int {
	return xxx_messageInfo_SnapshotPayload.Size(m)
}
func (m *SnapshotPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotPayload.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotPayload proto.InternalMessageInfo

func (m *SnapshotPayload) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func (m *SnapshotPayload) GetAccountBalances() []*AccountBalance {
	if m != nil {
		return m.AccountBalances
	}
	return nil
}

func (m *SnapshotPayload) GetNodeRegistrations() []*NodeRegistration {
	if m != nil {
		return m.NodeRegistrations
	}
	return nil
}

func (m *SnapshotPayload) GetAccountDatasets() []*AccountDataset {
	if m != nil {
		return m.AccountDatasets
	}
	return nil
}

func (m *SnapshotPayload) GetParticipationScores() []*ParticipationScore {
	if m != nil {
		return m.ParticipationScores
	}
	return nil
}

func (m *SnapshotPayload) GetPublishedReceipts() []*PublishedReceipt {
	if m != nil {
		return m.PublishedReceipts
	}
	return nil
}

func (m *SnapshotPayload) GetEscrowTransactions() []*Escrow {
	if m != nil {
		return m.EscrowTransactions
	}
	return nil
}

func (m *SnapshotPayload) GetPendingTransactions() []*PendingTransaction {
	if m != nil {
		return m.PendingTransactions
	}
	return nil
}

func (m *SnapshotPayload) GetPendingSignatures() []*PendingSignature {
	if m != nil {
		return m.PendingSignatures
	}
	return nil
}

func (m *SnapshotPayload) GetMultiSignatureInfos() []*MultiSignatureInfo {
	if m != nil {
		return m.MultiSignatureInfos
	}
	return nil
}

func (m *SnapshotPayload) GetSkippedBlocksmiths() []*SkippedBlocksmith {
	if m != nil {
		return m.SkippedBlocksmiths
	}
	return nil
}

func (m *SnapshotPayload) GetFeeScale() []*FeeScale {
	if m != nil {
		return m.FeeScale
	}
	return nil
}

func (m *SnapshotPayload) GetFeeVoteCommitmentVote() []*FeeVoteCommitmentVote {
	if m != nil {
		return m.FeeVoteCommitmentVote
	}
	return nil
}

func (m *SnapshotPayload) GetFeeVoteRevealVote() []*FeeVoteRevealVote {
	if m != nil {
		return m.FeeVoteRevealVote
	}
	return nil
}

func (m *SnapshotPayload) GetLiquidPayment() []*LiquidPayment {
	if m != nil {
		return m.LiquidPayment
	}
	return nil
}

func (m *SnapshotPayload) GetNodeAdmissionTimestamp() []*NodeAdmissionTimestamp {
	if m != nil {
		return m.NodeAdmissionTimestamp
	}
}

func (m *SnapshotPayload) GetMultiSignatureParticipants() []*MultiSignatureParticipant {
	if m != nil {
		return m.MultiSignatureParticipants
	}
	return nil
}

func init() {
	proto.RegisterType((*SnapshotFileInfo)(nil), "model.SnapshotFileInfo")
	proto.RegisterType((*SnapshotPayload)(nil), "model.SnapshotPayload")
}

func init() {
	proto.RegisterFile("model/snapshot.proto", fileDescriptor_5d9d8140a8c06fc6)
}

var fileDescriptor_5d9d8140a8c06fc6 = []byte{
	// 705 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x4d, 0x4f, 0xdb, 0x30,
	0x18, 0x56, 0x29, 0xed, 0xc0, 0x50, 0x0a, 0xe6, 0x63, 0xa6, 0x82, 0x29, 0x42, 0x3b, 0x44, 0x4c,
	0x6b, 0x25, 0x76, 0x9b, 0xb4, 0x4d, 0xc0, 0xa8, 0x98, 0x36, 0xa6, 0xca, 0x65, 0x3b, 0xec, 0xe6,
	0x3a, 0xa6, 0xb1, 0x48, 0xec, 0x2c, 0x76, 0xb6, 0xb1, 0x3f, 0xb6, 0xff, 0xb2, 0x5f, 0x33, 0xc5,
	0x71, 0x0a, 0x89, 0xc3, 0x2e, 0x48, 0x7d, 0xbe, 0xe2, 0xc7, 0xf8, 0x7d, 0xc1, 0x4e, 0x2c, 0x03,
	0x16, 0x8d, 0x94, 0x20, 0x89, 0x0a, 0xa5, 0x1e, 0x26, 0xa9, 0xd4, 0x12, 0x76, 0x0c, 0x3a, 0x78,
	0x66, 0xc9, 0x84, 0x0b, 0x76, 0x16, 0x49, 0x7a, 0x7b, 0x45, 0x04, 0xbf, 0x61, 0xca, 0xca, 0x06,
	0x83, 0x82, 0x27, 0x94, 0xca, 0x4c, 0xe8, 0x33, 0x12, 0x11, 0x41, 0x99, 0xe5, 0x0e, 0x0a, 0x4e,
	0xc8, 0x80, 0x61, 0x36, 0xe7, 0x4a, 0xa7, 0x44, 0x73, 0x29, 0x1a, 0x9d, 0xef, 0x89, 0x26, 0x8a,
	0x95, 0xa9, 0xf6, 0xab, 0x09, 0x49, 0x35, 0xa7, 0x3c, 0x31, 0xb6, 0x29, 0x95, 0x69, 0x2d, 0x39,
	0xc9, 0x66, 0x11, 0x57, 0x21, 0x0b, 0x30, 0xa3, 0x8c, 0x27, 0xa5, 0x1b, 0x16, 0x2c, 0x53, 0x34,
	0x95, 0x3f, 0xab, 0x5f, 0x8b, 0xb3, 0x48, 0xf3, 0x29, 0x9f, 0x0b, 0xa2, 0xb3, 0x45, 0xda, 0x56,
	0xc1, 0xcd, 0xf2, 0x7a, 0x16, 0x3a, 0xb4, 0xb5, 0x6f, 0x79, 0x92, 0xb0, 0xc0, 0x14, 0x57, 0x31,
	0xd7, 0xa1, 0xa5, 0xed, 0x95, 0xdd, 0x30, 0x36, 0xa5, 0x24, 0x2a, 0x73, 0xb6, 0x17, 0xe8, 0x57,
	0xa9, 0x4b, 0x70, 0xbf, 0x00, 0x23, 0xfe, 0x3d, 0xe3, 0xc1, 0x84, 0xdc, 0xc5, 0x4c, 0xd8, 0x73,
	0x1e, 0xfd, 0x59, 0x02, 0x9b, 0x53, 0x7b, 0xeb, 0x63, 0x1e, 0xb1, 0x0f, 0xe2, 0x46, 0xc2, 0xe3,
	0x2a, 0x76, 0x49, 0x54, 0x88, 0x5a, 0x5e, 0xcb, 0x5f, 0xc7, 0x0e, 0x0e, 0xf7, 0x40, 0xf7, 0x92,
	0xf1, 0x79, 0xa8, 0xd1, 0x92, 0xd7, 0xf2, 0x7b, 0xd8, 0xfe, 0x82, 0x6f, 0xc1, 0x60, 0x92, 0x4a,
	0xca, 0x94, 0xba, 0xf8, 0x95, 0xf0, 0xe2, 0xd6, 0xaf, 0x79, 0xcc, 0x94, 0x26, 0x71, 0x82, 0xda,
	0x5e, 0xcb, 0x6f, 0xe3, 0xff, 0x28, 0xe0, 0x01, 0x58, 0x3d, 0x0f, 0x09, 0x17, 0xd7, 0x77, 0x09,
	0x43, 0xcb, 0x5e, 0xcb, 0xef, 0xe0, 0x7b, 0x00, 0x7e, 0x01, 0x7b, 0x53, 0xe7, 0x39, 0x18, 0x69,
	0xc7, 0x6b, 0xf9, 0x1b, 0x27, 0x87, 0x43, 0x53, 0x79, 0xd8, 0x2c, 0xc2, 0x8f, 0x98, 0xf3, 0xe2,
	0x79, 0xb1, 0xf3, 0x30, 0x13, 0xb7, 0x2a, 0xaf, 0xc7, 0x14, 0xea, 0x7a, 0xed, 0xbc, 0x78, 0x1d,
	0x3f, 0xfa, 0xbb, 0x02, 0xfa, 0xe5, 0x6d, 0x4c, 0xc8, 0x5d, 0x24, 0x49, 0x00, 0x9f, 0x83, 0x6e,
	0xf1, 0x7f, 0x42, 0x2d, 0xaf, 0xed, 0xaf, 0x9d, 0xac, 0xdb, 0x63, 0x18, 0x10, 0x5b, 0x0e, 0xbe,
	0x03, 0xfd, 0xd3, 0xca, 0x5b, 0x55, 0x68, 0xc9, 0xc8, 0x77, 0xad, 0xbc, 0xca, 0xe2, 0xba, 0x1a,
	0x5e, 0x80, 0xad, 0xcf, 0xb5, 0x07, 0xad, 0x50, 0xdb, 0x44, 0x3c, 0xb5, 0x11, 0x75, 0x1e, 0xbb,
	0x8e, 0x07, 0xe7, 0xb0, 0x2f, 0x5f, 0xa1, 0xe5, 0xa6, 0x73, 0x58, 0x16, 0xd7, 0xd5, 0xf0, 0x23,
	0xd8, 0x9e, 0x38, 0xe3, 0xa1, 0x50, 0xc7, 0x84, 0xec, 0xdb, 0x10, 0x57, 0x81, 0x9b, 0x5c, 0x79,
	0xa9, 0x49, 0x6d, 0x96, 0x8a, 0xcb, 0xbf, 0x2f, 0x55, 0xe7, 0xb1, 0xeb, 0x80, 0x6f, 0x00, 0xbc,
	0x30, 0x43, 0x77, 0x9d, 0x12, 0xa1, 0x08, 0x2d, 0x2e, 0xe7, 0x89, 0xc9, 0xe9, 0xd9, 0x9c, 0x42,
	0x80, 0x1b, 0x84, 0xa6, 0x12, 0x13, 0x01, 0x17, 0xf3, 0x8a, 0x7f, 0xa5, 0x5a, 0xc9, 0x51, 0xe0,
	0x26, 0x97, 0xa9, 0x54, 0xc0, 0x8b, 0x71, 0x57, 0x68, 0xb5, 0x5a, 0xa9, 0xc6, 0x63, 0xd7, 0x91,
	0x9f, 0xe9, 0xaa, 0xb2, 0x33, 0xf2, 0x21, 0x55, 0x08, 0x54, 0xce, 0xe4, 0x2a, 0x70, 0x93, 0x0b,
	0x5e, 0x02, 0x38, 0xad, 0x6f, 0x14, 0x85, 0xd6, 0x4c, 0x16, 0x2a, 0xa7, 0xa6, 0x2e, 0xc0, 0x0d,
	0x1e, 0xf8, 0x02, 0xac, 0x8c, 0xed, 0xf2, 0x41, 0xeb, 0xc6, 0xdf, 0xb7, 0xfe, 0x12, 0xc6, 0x0b,
	0x01, 0xc4, 0x60, 0x77, 0x5c, 0xec, 0xa4, 0x73, 0x19, 0xc7, 0x5c, 0xe7, 0x2b, 0x28, 0xff, 0x85,
	0x7a, 0xc6, 0x79, 0x70, 0xef, 0x74, 0x35, 0xb8, 0xd9, 0x0a, 0xc7, 0x60, 0xcb, 0x12, 0x98, 0xfd,
	0x60, 0x24, 0x32, 0x79, 0x1b, 0x95, 0x26, 0x0e, 0x8f, 0x5d, 0x0b, 0x7c, 0x0d, 0x7a, 0x9f, 0x1e,
	0xae, 0x46, 0xd4, 0x37, 0x19, 0x3b, 0x36, 0xa3, 0xc2, 0xe1, 0xaa, 0x34, 0x5f, 0x44, 0xf9, 0x60,
	0x9d, 0x06, 0x31, 0x57, 0xaa, 0xb2, 0xe2, 0x36, 0x4d, 0xc8, 0xe1, 0x83, 0x79, 0x74, 0x45, 0xf8,
	0x11, 0xf3, 0xd9, 0xf1, 0x37, 0x7f, 0xce, 0x75, 0x98, 0xcd, 0x86, 0x54, 0xc6, 0xa3, 0xdf, 0x52,
	0xce, 0x68, 0xf1, 0xf7, 0x65, 0x3e, 0x2c, 0x23, 0x2a, 0xe3, 0x58, 0x8a, 0x91, 0x89, 0x9e, 0x75,
	0xcd, 0x26, 0x7f, 0xf5, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x04, 0x42, 0xcf, 0x44, 0x07, 0x00,
	0x00,
}

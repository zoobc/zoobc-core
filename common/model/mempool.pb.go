// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/mempool.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Mempool represent the mempool data structure stored in the database
type Mempool struct {
	TransactionID         []byte   `protobuf:"bytes,1,opt,name=TransactionID,proto3" json:"TransactionID,omitempty"`
	SenderAccountType     int32    `protobuf:"varint,2,opt,name=SenderAccountType,proto3" json:"SenderAccountType,omitempty"`
	SenderAccount         string   `protobuf:"bytes,3,opt,name=SenderAccount,proto3" json:"SenderAccount,omitempty"`
	RecipientAccountType  int32    `protobuf:"varint,4,opt,name=RecipientAccountType,proto3" json:"RecipientAccountType,omitempty"`
	RecipientAccount      string   `protobuf:"bytes,5,opt,name=RecipientAccount,proto3" json:"RecipientAccount,omitempty"`
	TransactionType       uint32   `protobuf:"varint,6,opt,name=TransactionType,proto3" json:"TransactionType,omitempty"`
	Fee                   int64    `protobuf:"varint,7,opt,name=Fee,proto3" json:"Fee,omitempty"`
	Timestamp             int64    `protobuf:"varint,8,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	TransactionHash       []byte   `protobuf:"bytes,9,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	TransactionBodyLength uint32   `protobuf:"varint,10,opt,name=TransactionBodyLength,proto3" json:"TransactionBodyLength,omitempty"`
	TransactionBodyBytes  []byte   `protobuf:"bytes,11,opt,name=TransactionBodyBytes,proto3" json:"TransactionBodyBytes,omitempty"`
	Signature             []byte   `protobuf:"bytes,12,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Mempool) Reset()         { *m = Mempool{} }
func (m *Mempool) String() string { return proto.CompactTextString(m) }
func (*Mempool) ProtoMessage()    {}
func (*Mempool) Descriptor() ([]byte, []int) {
	return fileDescriptor_22ea31ac6d427b7b, []int{0}
}

func (m *Mempool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mempool.Unmarshal(m, b)
}
func (m *Mempool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mempool.Marshal(b, m, deterministic)
}
func (m *Mempool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mempool.Merge(m, src)
}
func (m *Mempool) XXX_Size() int {
	return xxx_messageInfo_Mempool.Size(m)
}
func (m *Mempool) XXX_DiscardUnknown() {
	xxx_messageInfo_Mempool.DiscardUnknown(m)
}

var xxx_messageInfo_Mempool proto.InternalMessageInfo

func (m *Mempool) GetTransactionID() []byte {
	if m != nil {
		return m.TransactionID
	}
	return nil
}

func (m *Mempool) GetSenderAccountType() int32 {
	if m != nil {
		return m.SenderAccountType
	}
	return 0
}

func (m *Mempool) GetSenderAccount() string {
	if m != nil {
		return m.SenderAccount
	}
	return ""
}

func (m *Mempool) GetRecipientAccountType() int32 {
	if m != nil {
		return m.RecipientAccountType
	}
	return 0
}

func (m *Mempool) GetRecipientAccount() string {
	if m != nil {
		return m.RecipientAccount
	}
	return ""
}

func (m *Mempool) GetTransactionType() uint32 {
	if m != nil {
		return m.TransactionType
	}
	return 0
}

func (m *Mempool) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *Mempool) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Mempool) GetTransactionHash() []byte {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

func (m *Mempool) GetTransactionBodyLength() uint32 {
	if m != nil {
		return m.TransactionBodyLength
	}
	return 0
}

func (m *Mempool) GetTransactionBodyBytes() []byte {
	if m != nil {
		return m.TransactionBodyBytes
	}
	return nil
}

func (m *Mempool) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type GetMempoolsRequest struct {
	// Number of Mempool transactions to fetch
	MempoolSize uint32 `protobuf:"varint,1,opt,name=MempoolSize,proto3" json:"MempoolSize,omitempty"`
	// Fetch Mempool transactions from timestamp
	From int64 `protobuf:"varint,2,opt,name=From,proto3" json:"From,omitempty"`
	// Fetch Mempool transactions to timestamp
	To                   int64    `protobuf:"varint,3,opt,name=To,proto3" json:"To,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMempoolsRequest) Reset()         { *m = GetMempoolsRequest{} }
func (m *GetMempoolsRequest) String() string { return proto.CompactTextString(m) }
func (*GetMempoolsRequest) ProtoMessage()    {}
func (*GetMempoolsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22ea31ac6d427b7b, []int{1}
}

func (m *GetMempoolsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMempoolsRequest.Unmarshal(m, b)
}
func (m *GetMempoolsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMempoolsRequest.Marshal(b, m, deterministic)
}
func (m *GetMempoolsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMempoolsRequest.Merge(m, src)
}
func (m *GetMempoolsRequest) XXX_Size() int {
	return xxx_messageInfo_GetMempoolsRequest.Size(m)
}
func (m *GetMempoolsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMempoolsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMempoolsRequest proto.InternalMessageInfo

func (m *GetMempoolsRequest) GetMempoolSize() uint32 {
	if m != nil {
		return m.MempoolSize
	}
	return 0
}

func (m *GetMempoolsRequest) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *GetMempoolsRequest) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

type GetMempoolsResponse struct {
	// Number of transactions returned
	MempoolSize uint32 `protobuf:"varint,1,opt,name=MempoolSize,proto3" json:"MempoolSize,omitempty"`
	// Mempool Transactions returned
	MempoolTransactions  []*Mempool `protobuf:"bytes,3,rep,name=MempoolTransactions,proto3" json:"MempoolTransactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetMempoolsResponse) Reset()         { *m = GetMempoolsResponse{} }
func (m *GetMempoolsResponse) String() string { return proto.CompactTextString(m) }
func (*GetMempoolsResponse) ProtoMessage()    {}
func (*GetMempoolsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22ea31ac6d427b7b, []int{2}
}

func (m *GetMempoolsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMempoolsResponse.Unmarshal(m, b)
}
func (m *GetMempoolsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMempoolsResponse.Marshal(b, m, deterministic)
}
func (m *GetMempoolsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMempoolsResponse.Merge(m, src)
}
func (m *GetMempoolsResponse) XXX_Size() int {
	return xxx_messageInfo_GetMempoolsResponse.Size(m)
}
func (m *GetMempoolsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMempoolsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMempoolsResponse proto.InternalMessageInfo

func (m *GetMempoolsResponse) GetMempoolSize() uint32 {
	if m != nil {
		return m.MempoolSize
	}
	return 0
}

func (m *GetMempoolsResponse) GetMempoolTransactions() []*Mempool {
	if m != nil {
		return m.MempoolTransactions
	}
	return nil
}

func init() {
	proto.RegisterType((*Mempool)(nil), "model.Mempool")
	proto.RegisterType((*GetMempoolsRequest)(nil), "model.GetMempoolsRequest")
	proto.RegisterType((*GetMempoolsResponse)(nil), "model.GetMempoolsResponse")
}

func init() { proto.RegisterFile("model/mempool.proto", fileDescriptor_22ea31ac6d427b7b) }

var fileDescriptor_22ea31ac6d427b7b = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x95, 0x7a, 0xdd, 0xe8, 0xeb, 0x3a, 0x86, 0x0b, 0x92, 0x0f, 0x1c, 0xa2, 0x8a, 0x83,
	0x35, 0x41, 0x2b, 0x0d, 0x3e, 0x00, 0x54, 0x68, 0x80, 0x04, 0x17, 0x37, 0xa7, 0xdd, 0x52, 0xf7,
	0xa9, 0x8d, 0x34, 0xfb, 0x85, 0xd8, 0x3d, 0x74, 0x5f, 0x9a, 0xaf, 0x80, 0xfa, 0x16, 0x69, 0x49,
	0x9a, 0xc3, 0x2e, 0x91, 0xf3, 0xfb, 0x3f, 0xfd, 0x62, 0xbf, 0x17, 0xc3, 0xd4, 0xd1, 0x06, 0x1f,
	0x16, 0x0e, 0x5d, 0x49, 0xf4, 0x30, 0x2f, 0x2b, 0x8a, 0x24, 0x87, 0x0c, 0x67, 0xff, 0x04, 0x5c,
	0xfc, 0x79, 0x0a, 0xe4, 0x07, 0x98, 0x64, 0x55, 0xee, 0x43, 0x6e, 0x63, 0x41, 0xfe, 0xd7, 0x77,
	0x95, 0xa4, 0x89, 0xbe, 0x34, 0x6d, 0x28, 0x3f, 0xc2, 0x9b, 0x15, 0xfa, 0x0d, 0x56, 0xdf, 0xac,
	0xa5, 0xbd, 0x8f, 0xd9, 0xa1, 0x44, 0x35, 0x48, 0x13, 0x3d, 0x34, 0xa7, 0xc1, 0xd1, 0xd9, 0x82,
	0x4a, 0xa4, 0x89, 0x1e, 0x99, 0x36, 0x94, 0xb7, 0xf0, 0xd6, 0xa0, 0x2d, 0xca, 0x02, 0x7d, 0x6c,
	0x6a, 0xcf, 0x58, 0xdb, 0x9b, 0xc9, 0x1b, 0xb8, 0xee, 0x72, 0x35, 0x64, 0xf9, 0x09, 0x97, 0x1a,
	0x5e, 0x37, 0x0e, 0xc1, 0xea, 0xf3, 0x34, 0xd1, 0x13, 0xd3, 0xc5, 0xf2, 0x1a, 0xc4, 0x1d, 0xa2,
	0xba, 0x48, 0x13, 0x2d, 0xcc, 0x71, 0x29, 0xdf, 0xc3, 0x28, 0x2b, 0x1c, 0x86, 0x98, 0xbb, 0x52,
	0xbd, 0x62, 0xfe, 0x0c, 0x3a, 0xe6, 0x9f, 0x79, 0xd8, 0xa9, 0x11, 0x77, 0xad, 0x8b, 0xe5, 0x17,
	0x78, 0xd7, 0x40, 0x4b, 0xda, 0x1c, 0x7e, 0xa3, 0xdf, 0xc6, 0x9d, 0x02, 0xde, 0x49, 0x7f, 0x78,
	0xec, 0x4c, 0x27, 0x58, 0x1e, 0x22, 0x06, 0x35, 0xe6, 0x8f, 0xf4, 0x66, 0xc7, 0x1d, 0xaf, 0x8a,
	0xad, 0xcf, 0xe3, 0xbe, 0x42, 0x75, 0xc9, 0x85, 0xcf, 0x60, 0x76, 0x0f, 0xf2, 0x07, 0xc6, 0x7a,
	0xe6, 0xc1, 0xe0, 0xdf, 0x3d, 0x86, 0x28, 0x53, 0x18, 0xd7, 0x68, 0x55, 0x3c, 0x22, 0x4f, 0x7e,
	0x62, 0x9a, 0x48, 0x4a, 0x38, 0xbb, 0xab, 0xc8, 0xf1, 0xa8, 0x85, 0xe1, 0xb5, 0xbc, 0x82, 0x41,
	0x46, 0x3c, 0x52, 0x61, 0x06, 0x19, 0xcd, 0x0e, 0x30, 0x6d, 0xb9, 0x43, 0x49, 0x3e, 0xe0, 0x0b,
	0xe4, 0x5f, 0x61, 0x5a, 0xbf, 0x36, 0x4e, 0x14, 0x94, 0x48, 0x85, 0x1e, 0xdf, 0x5e, 0xcd, 0xf9,
	0x5f, 0x9d, 0xd7, 0x15, 0xa6, 0xaf, 0x74, 0x79, 0x73, 0xaf, 0xb7, 0x45, 0xdc, 0xed, 0xd7, 0x73,
	0x4b, 0x6e, 0xf1, 0x48, 0xb4, 0xb6, 0x4f, 0xcf, 0x4f, 0x96, 0x2a, 0x5c, 0x58, 0x72, 0x8e, 0xfc,
	0x82, 0x45, 0xeb, 0x73, 0xbe, 0x02, 0x9f, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xad, 0x37, 0xa6,
	0xbf, 0x19, 0x03, 0x00, 0x00,
}

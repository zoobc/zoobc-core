version: 2
jobs:
  prepare:
    working_directory: /go/src/github.com/zoobc/zoobc-core
    docker:
      - image: circleci/golang:1.12.0
    environment:
      - DEP_VERSION: 0.5.1
    steps:
      - run:
          name: Switch to SSH
          command: git config --global url.ssh://git@github.com/zoobc.insteadOf https://github.com/zoobc
      - checkout
      - restore_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
            - /go/src/github.com/zoobc/zoobc-core/vendor
      - run:
          name: Download Vendor
          command: |
            if [ ! -d /go/src/github.com/zoobc/zoobc-core/vendor ]; then
              curl -L -s https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o /go/bin/dep
              chmod +x /go/bin/dep
              /go/bin/dep ensure --vendor-only -v
            fi
      - save_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
            - /go/src/github.com/zoobc/zoobc-core/vendor
  test:
    working_directory: /go/src/github.com/zoobc/zoobc-core
    docker:
      - image: circleci/golang:1.12.0
    environment:
      - GOLANGCI_LINT: 1.18.0
    steps:
      - checkout
      - run:
          name: Download golang ci lint
          command: |
            curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v${GOLANGCI_LINT}
      - run:
          name: Download golint
          command: go get -u golang.org/x/lint/golint
      - restore_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
            - /go/src/github.com/zoobc/zoobc-core/vendor
      - run:
          name: Test
          command: go test `go list ./... | egrep -v 'common/model|common/service'` --short
      - run:
          name: Go Fmt
          command: go fmt `go list ./... | egrep -v 'common/model|common/service|vendor'`
      - run:
          name: Golangci Lint
          command: golangci-lint run
      - run:
          name: Go Official Lint
          command: golint `go list ./... | egrep -v 'vendor|common/model|common/service'`
  build:
    working_directory: /go/src/github.com/zoobc/zoobc-core
    docker:
      - image: circleci/golang:1.12.0
    steps:
      - checkout
      - restore_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
            - /go/src/github.com/zoobc/zoobc-core/vendor
      - restore_cache:
          key: build-cache-{{ .Branch }}-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}
          paths:
            - ./dist
      - run:
          name: Install rsync
          command: |
            if [ ! -d rsync ]; then
              sudo apt-get update && sudo apt-get install rsync
            fi
      - run:
          name: Build
          command: |
            go build -o ./dist/zoobc
            rsync -va --exclude='*.db' ./resource ./dist
      - save_cache:
          key: build-cache-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ./dist
  deploy-develop:
    working_directory: /go/src/github.com/zoobc/zoobc-core
    docker:
      - image: circleci/golang:1.12.0
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: Install rsync
          command: |
            if [ ! -d rsync ]; then
              sudo apt-get update && sudo apt-get install rsync
            fi
      - restore_cache:
          key: build-cache-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ./dist
      - run:
          name: Add Hosts
          command: for host in $ln1 $ln2 $ln3 $ln4; do ssh-keyscan $host >> ~/.ssh/known_hosts; done
      - run:
          name: Stop Services
          command: |
            for host in $ln1 $ln2 $ln3 $ln4; do ssh root@$host 'sudo systemctl stop zoobc.service'; done
      - run:
          name: Deploy
          command: |
            for host in $ln1 $ln2 $ln3 $ln4; do rsync -vae ssh ./dist/ root@$host:/root/zoobc --exclude='*.db'; done
      - run:
          name: Start Services
          command: |
            for host in $ln1 $ln2 $ln3 $ln4; do ssh root@$host 'sudo systemctl start zoobc.service'; done
workflows:
  version: 2
  prepare-deploy:
    jobs:
      - prepare
      - test:
          requires:
            - prepare
      - build:
          requires:
            - test
      - deploy-develop:
          requires:
            - build
          filters:
            branches:
              only: develop
